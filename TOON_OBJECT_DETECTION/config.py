import numpy as np

RNG_SEED = 3

#VISUALIZATION
DRAWTXT = False
DRAWBUB = False
DRAWCUT = False

#TRAIN PATH
TRAIN_INDEX_PATH = './train/trainval.txt'


#TEST PATH
TEST_IMAGE_PATH = './test/images/'
TEST_PREDICTION_PATH = './test/predictions/'
FINAL_IMAGE_PATH = TEST_PREDICTION_PATH + 'final/'
BUBBLE_PATH = TEST_PREDICTION_PATH + 'bubble/'
CUT_PATH = TEST_PREDICTION_PATH + 'cut/'
TEXT_PATH = TEST_PREDICTION_PATH + 'text/'

#TEST HYPERPARAMETER
TEST_SCALES = (600,)
TEST_MAX_SIZE = 1000
PIXEL_MEANS = np.array([[[102.9801, 115.9465, 122.7717]]])
TEST_BBOX_REG = True
TEST_NMS = 0.3
POOLING_MODE = 'crop'
CLASS_THRESH = 0.995
BACKGROUND = 'white'
OPENING_ITER_NUM = 1
DILATE_ITER_NUM = 1
THRESH_EXTENT = 127
AREA_THRESH = 2000
KERNEL_SIZE = 25
TEXT_MIN_MARGIN = 20
TEXT_MAX_MARGIN = 18

#TRAIN HYPERPARAMETER
TRAIN_BBOX_NORMALIZE_MEANS = (0.0, 0.0, 0.0, 0.0)
TRAIN_BBOX_NORMALIZE_STDS = (0.1, 0.1, 0.2, 0.2)
TRAIN_BBOX_NORMALIZE_TARGETS_PRECOMPUTED = True
LEARING_RATE = 4e-3
LEARING_DECAY = 8
BATCH = 4
EPOCH = 40
NUM_WORKERS = 0

#BBOX THRESHOLD
THRESH = 0.05

#BACKBONE NETWORK
BACKBONE = 'res101'

#CUDA
cuda = True


#MODEL PATH
PRETRAINED_MODEL_PATH = './pretrained_models/Speech-Bubble-Detector.pth'
SAVED_MODEL_PATH = './saving_models/'
BACKBONE_MODEL_PATH = './pretrained_models/resnet101_caffe.pth'
